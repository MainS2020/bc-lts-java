import java.nio.file.CopyOption
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption
import static ExtraFunctions.*

plugins {
  id "biz.aQute.bnd.builder" version "7.0.0"
}

jar.archiveBaseName = "bctls-lts$vm_range"

sourceSets {
    main {
      java {
        srcDirs = ['src/main/java', 'src/main/jdk1.5']
      }
    }
    java9 {
        java {
            srcDirs = ['src/main/jdk1.9']
        }
    }
}

dependencies {
  implementation project(':prov')
  implementation project(':util')

  implementation files("$lts_prov")
  implementation files("$lts_util")
    implementation project(path: ':core')
    testImplementation project(':pkix')


  java9Implementation files("$lts_prov")
  java9Implementation files("$lts_util")
  java9Implementation files(sourceSets.main.output.classesDirs) {
     builtBy compileJava
  }
}

compileJava {
  javaCompiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(8)
  }
}

compileJava9Java {
  javaCompiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(11)
  }
  sourceCompatibility = 9
  targetCompatibility = 9

  options.compilerArgs += [
                    '--module-path', "$lts_prov:$lts_util"
  ]
  options.sourcepath = files(['src/main/jdk1.5', 'src/main/java', 'src/main/jdk1.9'])
}

jar {
  from sourceSets.main.output
  into('META-INF/versions/9') {
    from sourceSets.java9.output
  }
  manifest.attributes('Multi-Release': 'true')
  manifest.attributes('Bundle-RequiredExecutionEnvironment': 'JavaSE-1.8')
  manifest.attributes('Export-Package': 'org.bouncycastle.{jsse|tls}.*')
  manifest.attributes('Import-Package': 'java.*;resolution:=optional,javax.*;resolution:=optional,!org.bouncycastle.{jsse|tls}.*;org.bouncycastle.*;version="[2.73,2.74)"')
}

task sourcesJar(type: Jar) {
  archiveBaseName = jar.archiveBaseName
  classifier = 'sources'
  from sourceSets.main.allSource
  into('META-INF/versions/9') {
    from sourceSets.java9.allSource
  }
}

javadoc {
  title = "Bouncy Castle Library (LTS Edition) ${version} TLS API"
  options.windowTitle = "Bouncy Castle Library (LTS Edition) ${version} TLS API"
  options.overview = "overview.html"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveBaseName = jar.archiveBaseName
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

task('copyJars', type:Copy) {
  from new File(projectDir,"build/libs")
  into new File(rootDir,"../bc-lts-java-jars/${version}/")
}

